"""make_username_optional

Revision ID: 985a481c548b
Revises: initial_migration
Create Date: 2025-06-17 03:03:09.329943

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '985a481c548b'
down_revision: Union[str, None] = 'initial_migration'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('booking', sa.Column('start_date', sa.DateTime(), nullable=False))
    op.add_column('booking', sa.Column('end_date', sa.DateTime(), nullable=False))
    op.drop_column('booking', 'total_price')
    op.drop_column('booking', 'created_at')
    op.drop_column('booking', 'updated_at')
    op.drop_column('booking', 'check_out')
    op.drop_column('booking', 'status')
    op.drop_column('booking', 'check_in')
    op.drop_column('house', 'description')
    op.drop_column('house', 'created_at')
    op.drop_column('house', 'city')
    op.drop_column('house', 'updated_at')
    op.drop_column('house', 'country')
    op.drop_column('room', 'updated_at')
    op.drop_column('room', 'description')
    op.drop_column('room', 'created_at')
    op.drop_column('room', 'price_per_night')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.create_unique_constraint(None, 'user', ['username'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.add_column('room', sa.Column('price_per_night', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('room', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('room', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('room', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('house', sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('house', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('house', sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('house', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('house', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('check_in', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('check_out', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_column('booking', 'end_date')
    op.drop_column('booking', 'start_date')
    # ### end Alembic commands ### 